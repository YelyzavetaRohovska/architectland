# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: architectland
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: architectland
# "service" is the name of this project. This will also be added to your AWS resource names.
service: architectland

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  tracing:
    apiGateway: true
    lambda: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - rds:*
      Resource: "*"
    - Effect: Allow
      Action:
        - ec2:DescribeSecurityGroups
        - ec2:DescribeSubnets
        - ec2:DescribeNetworkInterfaces
        - ec2:DescribeVpcs
        - ec2:CreateNetworkInterface
        - ec2:DeleteNetworkInterface
        - ec2:DescribeNetworkInterfaceAttribute
      Resource: "*"
  vpc:
    securityGroupIds:
      - sg-0ed152dddc06f3f6c  # Replace with your security group ID
    subnetIds:
      - subnet-024f960ba3e7eb9f3    # Replace with your subnet ID
      - subnet-01abb849a1c1c5561
      - subnet-04aed71b787721fd4
environment:
    DB_HOST: ${env:DB_HOST}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_NAME: ${env:DB_NAME}
    DB_PORT: ${env:DB_PORT}
functions:
  buildingLimits_calculate:
    handler: src/routes/buildingLimits/handler.post
    events:
      - http:
          path: buildingLimits/calculate
          method: post
          cors: true
          request:
            schemas:
              application/json: ${file(schemas/buildingLimits/post.json)}
  buildingLimits_fetch:
    handler: src/routes/buildingLimits/handler.get
    events:
      - http:
          path: buildingLimits
          method: get
          cors: true
resources:
  Resources:
    LambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: LambdaExecutionRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Policies:
          - PolicyName: CustomPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - rds:DescribeDBInstances
                    - rds:Connect
                  Resource: "*"
